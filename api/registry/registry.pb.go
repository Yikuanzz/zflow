// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: api/registry/registry.proto

package registry

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceInstance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // 服务名
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`     // 实例唯一 ID（IP:Port 或 UUID）
	Addr          string                 `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"` // 访问地址
	Meta          map[string]string      `protobuf:"bytes,4,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	TtlSec        int32                  `protobuf:"varint,5,opt,name=ttl_sec,json=ttlSec,proto3" json:"ttl_sec,omitempty"` // 首次租约 TTL
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceInstance) Reset() {
	*x = ServiceInstance{}
	mi := &file_api_registry_registry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInstance) ProtoMessage() {}

func (x *ServiceInstance) ProtoReflect() protoreflect.Message {
	mi := &file_api_registry_registry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInstance.ProtoReflect.Descriptor instead.
func (*ServiceInstance) Descriptor() ([]byte, []int) {
	return file_api_registry_registry_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceInstance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceInstance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServiceInstance) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ServiceInstance) GetMeta() map[string]string {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ServiceInstance) GetTtlSec() int32 {
	if x != nil {
		return x.TtlSec
	}
	return 0
}

type Lease struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	ExpireUnix    int64                  `protobuf:"varint,3,opt,name=expire_unix,json=expireUnix,proto3" json:"expire_unix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Lease) Reset() {
	*x = Lease{}
	mi := &file_api_registry_registry_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Lease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lease) ProtoMessage() {}

func (x *Lease) ProtoReflect() protoreflect.Message {
	mi := &file_api_registry_registry_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lease.ProtoReflect.Descriptor instead.
func (*Lease) Descriptor() ([]byte, []int) {
	return file_api_registry_registry_proto_rawDescGZIP(), []int{1}
}

func (x *Lease) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Lease) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Lease) GetExpireUnix() int64 {
	if x != nil {
		return x.ExpireUnix
	}
	return 0
}

type Query struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // 为空则返回全部
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query) Reset() {
	*x = Query{}
	mi := &file_api_registry_registry_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_api_registry_registry_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_api_registry_registry_proto_rawDescGZIP(), []int{2}
}

func (x *Query) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Services struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Instances     []*ServiceInstance     `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Services) Reset() {
	*x = Services{}
	mi := &file_api_registry_registry_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Services) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Services) ProtoMessage() {}

func (x *Services) ProtoReflect() protoreflect.Message {
	mi := &file_api_registry_registry_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Services.ProtoReflect.Descriptor instead.
func (*Services) Descriptor() ([]byte, []int) {
	return file_api_registry_registry_proto_rawDescGZIP(), []int{3}
}

func (x *Services) GetInstances() []*ServiceInstance {
	if x != nil {
		return x.Instances
	}
	return nil
}

var File_api_registry_registry_proto protoreflect.FileDescriptor

const file_api_registry_registry_proto_rawDesc = "" +
	"\n" +
	"\x1bapi/registry/registry.proto\x12\bregistry\x1a\x1bgoogle/protobuf/empty.proto\"\xd4\x01\n" +
	"\x0fServiceInstance\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x12\n" +
	"\x04addr\x18\x03 \x01(\tR\x04addr\x127\n" +
	"\x04meta\x18\x04 \x03(\v2#.registry.ServiceInstance.MetaEntryR\x04meta\x12\x17\n" +
	"\attl_sec\x18\x05 \x01(\x05R\x06ttlSec\x1a7\n" +
	"\tMetaEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"L\n" +
	"\x05Lease\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x1f\n" +
	"\vexpire_unix\x18\x03 \x01(\x03R\n" +
	"expireUnix\"\x1b\n" +
	"\x05Query\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"C\n" +
	"\bServices\x127\n" +
	"\tinstances\x18\x01 \x03(\v2\x19.registry.ServiceInstanceR\tinstances2\x93\x02\n" +
	"\bRegistry\x128\n" +
	"\bRegister\x12\x19.registry.ServiceInstance\x1a\x0f.registry.Lease\"\x00\x12/\n" +
	"\tKeepAlive\x12\x0f.registry.Lease\x1a\x0f.registry.Lease\"\x00\x127\n" +
	"\n" +
	"Deregister\x12\x0f.registry.Lease\x1a\x16.google.protobuf.Empty\"\x00\x121\n" +
	"\bDiscover\x12\x0f.registry.Query\x1a\x12.registry.Services\"\x00\x120\n" +
	"\x05Watch\x12\x0f.registry.Query\x1a\x12.registry.Services\"\x000\x01B\x14Z\x12zflow/api/registryb\x06proto3"

var (
	file_api_registry_registry_proto_rawDescOnce sync.Once
	file_api_registry_registry_proto_rawDescData []byte
)

func file_api_registry_registry_proto_rawDescGZIP() []byte {
	file_api_registry_registry_proto_rawDescOnce.Do(func() {
		file_api_registry_registry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_registry_registry_proto_rawDesc), len(file_api_registry_registry_proto_rawDesc)))
	})
	return file_api_registry_registry_proto_rawDescData
}

var file_api_registry_registry_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_registry_registry_proto_goTypes = []any{
	(*ServiceInstance)(nil), // 0: registry.ServiceInstance
	(*Lease)(nil),           // 1: registry.Lease
	(*Query)(nil),           // 2: registry.Query
	(*Services)(nil),        // 3: registry.Services
	nil,                     // 4: registry.ServiceInstance.MetaEntry
	(*emptypb.Empty)(nil),   // 5: google.protobuf.Empty
}
var file_api_registry_registry_proto_depIdxs = []int32{
	4, // 0: registry.ServiceInstance.meta:type_name -> registry.ServiceInstance.MetaEntry
	0, // 1: registry.Services.instances:type_name -> registry.ServiceInstance
	0, // 2: registry.Registry.Register:input_type -> registry.ServiceInstance
	1, // 3: registry.Registry.KeepAlive:input_type -> registry.Lease
	1, // 4: registry.Registry.Deregister:input_type -> registry.Lease
	2, // 5: registry.Registry.Discover:input_type -> registry.Query
	2, // 6: registry.Registry.Watch:input_type -> registry.Query
	1, // 7: registry.Registry.Register:output_type -> registry.Lease
	1, // 8: registry.Registry.KeepAlive:output_type -> registry.Lease
	5, // 9: registry.Registry.Deregister:output_type -> google.protobuf.Empty
	3, // 10: registry.Registry.Discover:output_type -> registry.Services
	3, // 11: registry.Registry.Watch:output_type -> registry.Services
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_registry_registry_proto_init() }
func file_api_registry_registry_proto_init() {
	if File_api_registry_registry_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_registry_registry_proto_rawDesc), len(file_api_registry_registry_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_registry_registry_proto_goTypes,
		DependencyIndexes: file_api_registry_registry_proto_depIdxs,
		MessageInfos:      file_api_registry_registry_proto_msgTypes,
	}.Build()
	File_api_registry_registry_proto = out.File
	file_api_registry_registry_proto_goTypes = nil
	file_api_registry_registry_proto_depIdxs = nil
}
