// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: api/base/base.proto

package base

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 端口定义
type Port struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                         // 端口名称，如 in/out1/pdf_out
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`                       // 人类可读的标签
	PortType      string                 `protobuf:"bytes,3,opt,name=port_type,json=portType,proto3" json:"port_type,omitempty"` // 端口类型，如 connection/file
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Port) Reset() {
	*x = Port{}
	mi := &file_api_base_base_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Port) ProtoMessage() {}

func (x *Port) ProtoReflect() protoreflect.Message {
	mi := &file_api_base_base_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Port.ProtoReflect.Descriptor instead.
func (*Port) Descriptor() ([]byte, []int) {
	return file_api_base_base_proto_rawDescGZIP(), []int{0}
}

func (x *Port) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Port) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Port) GetPortType() string {
	if x != nil {
		return x.PortType
	}
	return ""
}

// 端点定义
type Endpoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`       // 节点ID
	PortName      string                 `protobuf:"bytes,2,opt,name=port_name,json=portName,proto3" json:"port_name,omitempty"` // 端口名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	mi := &file_api_base_base_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_base_base_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_api_base_base_proto_rawDescGZIP(), []int{1}
}

func (x *Endpoint) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Endpoint) GetPortName() string {
	if x != nil {
		return x.PortName
	}
	return ""
}

// 节点类型定义
type NodeType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                                                                         // 节点类型唯一标识
	Category      string                 `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`                                                                               // 节点分类
	Note          string                 `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`                                                                                       // 节点说明
	Properties    map[string]*PortList   `protobuf:"bytes,4,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 属性映射，如 inputs/outputs
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeType) Reset() {
	*x = NodeType{}
	mi := &file_api_base_base_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeType) ProtoMessage() {}

func (x *NodeType) ProtoReflect() protoreflect.Message {
	mi := &file_api_base_base_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeType.ProtoReflect.Descriptor instead.
func (*NodeType) Descriptor() ([]byte, []int) {
	return file_api_base_base_proto_rawDescGZIP(), []int{2}
}

func (x *NodeType) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *NodeType) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *NodeType) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *NodeType) GetProperties() map[string]*PortList {
	if x != nil {
		return x.Properties
	}
	return nil
}

// 端口列表
type PortList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ports         []*Port                `protobuf:"bytes,1,rep,name=ports,proto3" json:"ports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PortList) Reset() {
	*x = PortList{}
	mi := &file_api_base_base_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortList) ProtoMessage() {}

func (x *PortList) ProtoReflect() protoreflect.Message {
	mi := &file_api_base_base_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortList.ProtoReflect.Descriptor instead.
func (*PortList) Descriptor() ([]byte, []int) {
	return file_api_base_base_proto_rawDescGZIP(), []int{3}
}

func (x *PortList) GetPorts() []*Port {
	if x != nil {
		return x.Ports
	}
	return nil
}

// 连接类型定义
type ConnectionType struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Uid              string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                                     // 连接类型唯一标识
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                   // 连接类型名称
	Description      string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                     // 连接类型描述
	Color            string                 `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`                                                 // 连接类型颜色
	AllowedPortTypes []string               `protobuf:"bytes,5,rep,name=allowed_port_types,json=allowedPortTypes,proto3" json:"allowed_port_types,omitempty"` // 允许的端口类型列表
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ConnectionType) Reset() {
	*x = ConnectionType{}
	mi := &file_api_base_base_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionType) ProtoMessage() {}

func (x *ConnectionType) ProtoReflect() protoreflect.Message {
	mi := &file_api_base_base_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionType.ProtoReflect.Descriptor instead.
func (*ConnectionType) Descriptor() ([]byte, []int) {
	return file_api_base_base_proto_rawDescGZIP(), []int{4}
}

func (x *ConnectionType) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ConnectionType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConnectionType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ConnectionType) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *ConnectionType) GetAllowedPortTypes() []string {
	if x != nil {
		return x.AllowedPortTypes
	}
	return nil
}

// GetNodeTypes 请求
type GetNodeTypesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeTypesRequest) Reset() {
	*x = GetNodeTypesRequest{}
	mi := &file_api_base_base_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeTypesRequest) ProtoMessage() {}

func (x *GetNodeTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_base_base_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeTypesRequest.ProtoReflect.Descriptor instead.
func (*GetNodeTypesRequest) Descriptor() ([]byte, []int) {
	return file_api_base_base_proto_rawDescGZIP(), []int{5}
}

// GetNodeTypes 响应
type GetNodeTypesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeTypes     []*NodeType            `protobuf:"bytes,1,rep,name=node_types,json=nodeTypes,proto3" json:"node_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeTypesResponse) Reset() {
	*x = GetNodeTypesResponse{}
	mi := &file_api_base_base_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeTypesResponse) ProtoMessage() {}

func (x *GetNodeTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_base_base_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeTypesResponse.ProtoReflect.Descriptor instead.
func (*GetNodeTypesResponse) Descriptor() ([]byte, []int) {
	return file_api_base_base_proto_rawDescGZIP(), []int{6}
}

func (x *GetNodeTypesResponse) GetNodeTypes() []*NodeType {
	if x != nil {
		return x.NodeTypes
	}
	return nil
}

// GetConnTypes 请求
type GetConnTypesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConnTypesRequest) Reset() {
	*x = GetConnTypesRequest{}
	mi := &file_api_base_base_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConnTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnTypesRequest) ProtoMessage() {}

func (x *GetConnTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_base_base_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnTypesRequest.ProtoReflect.Descriptor instead.
func (*GetConnTypesRequest) Descriptor() ([]byte, []int) {
	return file_api_base_base_proto_rawDescGZIP(), []int{7}
}

// GetConnTypes 响应
type GetConnTypesResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ConnectionTypes []*ConnectionType      `protobuf:"bytes,1,rep,name=connection_types,json=connectionTypes,proto3" json:"connection_types,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetConnTypesResponse) Reset() {
	*x = GetConnTypesResponse{}
	mi := &file_api_base_base_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConnTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnTypesResponse) ProtoMessage() {}

func (x *GetConnTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_base_base_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnTypesResponse.ProtoReflect.Descriptor instead.
func (*GetConnTypesResponse) Descriptor() ([]byte, []int) {
	return file_api_base_base_proto_rawDescGZIP(), []int{8}
}

func (x *GetConnTypesResponse) GetConnectionTypes() []*ConnectionType {
	if x != nil {
		return x.ConnectionTypes
	}
	return nil
}

// RunNode 请求
type RunNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`                                                             // 要运行的节点ID
	Inputs        map[string][]byte      `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 节点输入数据
	Vars          map[string]string      `protobuf:"bytes,3,rep,name=vars,proto3" json:"vars,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`     // 变量映射
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunNodeRequest) Reset() {
	*x = RunNodeRequest{}
	mi := &file_api_base_base_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunNodeRequest) ProtoMessage() {}

func (x *RunNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_base_base_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunNodeRequest.ProtoReflect.Descriptor instead.
func (*RunNodeRequest) Descriptor() ([]byte, []int) {
	return file_api_base_base_proto_rawDescGZIP(), []int{9}
}

func (x *RunNodeRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *RunNodeRequest) GetInputs() map[string][]byte {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *RunNodeRequest) GetVars() map[string]string {
	if x != nil {
		return x.Vars
	}
	return nil
}

// RunNode 响应
type RunNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Outputs       map[string][]byte      `protobuf:"bytes,1,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 节点输出数据
	State         string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`                                                                               // 节点执行状态
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`                                                                               // 错误信息（如果有）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunNodeResponse) Reset() {
	*x = RunNodeResponse{}
	mi := &file_api_base_base_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunNodeResponse) ProtoMessage() {}

func (x *RunNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_base_base_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunNodeResponse.ProtoReflect.Descriptor instead.
func (*RunNodeResponse) Descriptor() ([]byte, []int) {
	return file_api_base_base_proto_rawDescGZIP(), []int{10}
}

func (x *RunNodeResponse) GetOutputs() map[string][]byte {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *RunNodeResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *RunNodeResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_api_base_base_proto protoreflect.FileDescriptor

const file_api_base_base_proto_rawDesc = "" +
	"\n" +
	"\x13api/base/base.proto\x12\x04base\"M\n" +
	"\x04Port\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\x1b\n" +
	"\tport_type\x18\x03 \x01(\tR\bportType\"@\n" +
	"\bEndpoint\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1b\n" +
	"\tport_name\x18\x02 \x01(\tR\bportName\"\xdb\x01\n" +
	"\bNodeType\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x12\x1a\n" +
	"\bcategory\x18\x02 \x01(\tR\bcategory\x12\x12\n" +
	"\x04note\x18\x03 \x01(\tR\x04note\x12>\n" +
	"\n" +
	"properties\x18\x04 \x03(\v2\x1e.base.NodeType.PropertiesEntryR\n" +
	"properties\x1aM\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12$\n" +
	"\x05value\x18\x02 \x01(\v2\x0e.base.PortListR\x05value:\x028\x01\",\n" +
	"\bPortList\x12 \n" +
	"\x05ports\x18\x01 \x03(\v2\n" +
	".base.PortR\x05ports\"\x9c\x01\n" +
	"\x0eConnectionType\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x14\n" +
	"\x05color\x18\x04 \x01(\tR\x05color\x12,\n" +
	"\x12allowed_port_types\x18\x05 \x03(\tR\x10allowedPortTypes\"\x15\n" +
	"\x13GetNodeTypesRequest\"E\n" +
	"\x14GetNodeTypesResponse\x12-\n" +
	"\n" +
	"node_types\x18\x01 \x03(\v2\x0e.base.NodeTypeR\tnodeTypes\"\x15\n" +
	"\x13GetConnTypesRequest\"W\n" +
	"\x14GetConnTypesResponse\x12?\n" +
	"\x10connection_types\x18\x01 \x03(\v2\x14.base.ConnectionTypeR\x0fconnectionTypes\"\x8b\x02\n" +
	"\x0eRunNodeRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x128\n" +
	"\x06inputs\x18\x02 \x03(\v2 .base.RunNodeRequest.InputsEntryR\x06inputs\x122\n" +
	"\x04vars\x18\x03 \x03(\v2\x1e.base.RunNodeRequest.VarsEntryR\x04vars\x1a9\n" +
	"\vInputsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1a7\n" +
	"\tVarsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb7\x01\n" +
	"\x0fRunNodeResponse\x12<\n" +
	"\aoutputs\x18\x01 \x03(\v2\".base.RunNodeResponse.OutputsEntryR\aoutputs\x12\x14\n" +
	"\x05state\x18\x02 \x01(\tR\x05state\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x1a:\n" +
	"\fOutputsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x012\xd9\x01\n" +
	"\vBaseService\x12G\n" +
	"\fGetNodeTypes\x12\x19.base.GetNodeTypesRequest\x1a\x1a.base.GetNodeTypesResponse\"\x00\x12G\n" +
	"\fGetConnTypes\x12\x19.base.GetConnTypesRequest\x1a\x1a.base.GetConnTypesResponse\"\x00\x128\n" +
	"\aRunNode\x12\x14.base.RunNodeRequest\x1a\x15.base.RunNodeResponse\"\x00B\x0fZ\rapi/base;baseb\x06proto3"

var (
	file_api_base_base_proto_rawDescOnce sync.Once
	file_api_base_base_proto_rawDescData []byte
)

func file_api_base_base_proto_rawDescGZIP() []byte {
	file_api_base_base_proto_rawDescOnce.Do(func() {
		file_api_base_base_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_base_base_proto_rawDesc), len(file_api_base_base_proto_rawDesc)))
	})
	return file_api_base_base_proto_rawDescData
}

var file_api_base_base_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_api_base_base_proto_goTypes = []any{
	(*Port)(nil),                 // 0: base.Port
	(*Endpoint)(nil),             // 1: base.Endpoint
	(*NodeType)(nil),             // 2: base.NodeType
	(*PortList)(nil),             // 3: base.PortList
	(*ConnectionType)(nil),       // 4: base.ConnectionType
	(*GetNodeTypesRequest)(nil),  // 5: base.GetNodeTypesRequest
	(*GetNodeTypesResponse)(nil), // 6: base.GetNodeTypesResponse
	(*GetConnTypesRequest)(nil),  // 7: base.GetConnTypesRequest
	(*GetConnTypesResponse)(nil), // 8: base.GetConnTypesResponse
	(*RunNodeRequest)(nil),       // 9: base.RunNodeRequest
	(*RunNodeResponse)(nil),      // 10: base.RunNodeResponse
	nil,                          // 11: base.NodeType.PropertiesEntry
	nil,                          // 12: base.RunNodeRequest.InputsEntry
	nil,                          // 13: base.RunNodeRequest.VarsEntry
	nil,                          // 14: base.RunNodeResponse.OutputsEntry
}
var file_api_base_base_proto_depIdxs = []int32{
	11, // 0: base.NodeType.properties:type_name -> base.NodeType.PropertiesEntry
	0,  // 1: base.PortList.ports:type_name -> base.Port
	2,  // 2: base.GetNodeTypesResponse.node_types:type_name -> base.NodeType
	4,  // 3: base.GetConnTypesResponse.connection_types:type_name -> base.ConnectionType
	12, // 4: base.RunNodeRequest.inputs:type_name -> base.RunNodeRequest.InputsEntry
	13, // 5: base.RunNodeRequest.vars:type_name -> base.RunNodeRequest.VarsEntry
	14, // 6: base.RunNodeResponse.outputs:type_name -> base.RunNodeResponse.OutputsEntry
	3,  // 7: base.NodeType.PropertiesEntry.value:type_name -> base.PortList
	5,  // 8: base.BaseService.GetNodeTypes:input_type -> base.GetNodeTypesRequest
	7,  // 9: base.BaseService.GetConnTypes:input_type -> base.GetConnTypesRequest
	9,  // 10: base.BaseService.RunNode:input_type -> base.RunNodeRequest
	6,  // 11: base.BaseService.GetNodeTypes:output_type -> base.GetNodeTypesResponse
	8,  // 12: base.BaseService.GetConnTypes:output_type -> base.GetConnTypesResponse
	10, // 13: base.BaseService.RunNode:output_type -> base.RunNodeResponse
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_base_base_proto_init() }
func file_api_base_base_proto_init() {
	if File_api_base_base_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_base_base_proto_rawDesc), len(file_api_base_base_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_base_base_proto_goTypes,
		DependencyIndexes: file_api_base_base_proto_depIdxs,
		MessageInfos:      file_api_base_base_proto_msgTypes,
	}.Build()
	File_api_base_base_proto = out.File
	file_api_base_base_proto_goTypes = nil
	file_api_base_base_proto_depIdxs = nil
}
